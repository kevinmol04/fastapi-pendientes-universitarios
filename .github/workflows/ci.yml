name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
  workflow_dispatch:

jobs:
  tests-and-sonarqube:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # recomendado para an√°lisis/PRs

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install coverage

      - name: Run tests and generate coverage.xml
        run: |
          coverage run --source=app -m pytest -q
          coverage xml -i -o coverage.xml
          head -n 40 coverage.xml  # debug: verifica rutas

      # SonarQube self-hosted (servidor del profe)
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v3
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # (Opcional) Falla el pipeline si no pasa el Quality Gate
      - name: SonarQube Quality Gate
        uses: SonarSource/sonarqube-quality-gate-action@v1.1.0
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Upload coverage.xml artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage.xml
          path: coverage.xml

